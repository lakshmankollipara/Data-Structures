/*K.LAKSHMAN MADHAV
BL.EN.U4CSE09075
INFIX TO POSTFIX*/

#include<stdio.h>
#define MAXSTACK 10
typedef char stackentry;
typedef struct stack
{
 int top;
 stackentry entry[MAXSTACK];
}Stack;
int stackfull(Stack *s)
{
 return s->top>=MAXSTACK;
}
int stackempty(Stack *s)
{
 return s->top<=0;
}
void createstack(Stack *s)
{
 s->top=0;
}
void push(stackentry item,Stack *s)
{
 if(stackfull(s))
 printf("stack full\n");
 else
 s->entry[s->top++]=item;
}
void pop(stackentry *item,Stack *s)
{
 if(stackempty(s))
 printf("stack is empty");
 else
 {
  s->top=s->top-1;
  *item=s->entry[s->top];
 }
}
int prec(stackentry ch)
{
 if((ch=='*')||(ch=='/'))
 return2;
 else if((ch=='+')||(ch=='-'))
 return 1;
 else if((ch>='a')&&(ch<='z'))
 return 3;
 else if(ch=='\0')
 return 0;
}
char top(Stack *s)
{
 return(s->entry[s->top-1]);
}
int main()
{
 Stack s;
 char inp[20],op[20],ch;
 int i=0,j=0;
 printf("\n enter inp value");
 scanf("%s",inp);
 createstack(&s);
 push('\0',&s);
 while(inp[i]!='\0')
 {
  while(prec(inp[i]<=prec(top(&s))))
  {
   pop(&ch,&s);
   op[j]=ch;
   j++;
  }
  push(inp[i],&s);
  i++;
 }
 while(!stackempty(&s))
 {
  pop(&ch,&s);
  op[j]=ch;
  j++;
 }
 printf("the postfix expression is=%s\n",op);
 return 0;
}
/* output
enter inp valuea+b*c/d
the postfix expression is=abc*d/+
*/